version: '3'
services:
  search-featured-results:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DB_HOST: mongodb
      EDITOR_GROUP_NAME: 'App-MWS-featured-search'
      JWT_SECRET: mysecret
      JWT_TRUSTED_ISSUERS: '[{ "iss": "unified-auth", "url": "http://fakeauth/jwks" }, { "iss": "search-featured-results", "secret": "localtoken" }]'
      MOTION_URL: https://motion.tr.qual.txstate.edu/v2/api
      MOTION_TOKEN: set this in docker-compose.override.yml
      MYSQL_HOST: mysql
      MYSQL_DATABASE: peoplesearch
      MYSQL_PORT: 3306
      MYSQL_PASS: secret
      ORIGIN: http://localhost
      PUBLIC_BASE_URL: http://localhost
      PUBLIC_AUTH_BASE_URL: http://localhost:3001
    volumes:
      - ./src:/usr/app/src
    ports:
      - 80:80
    depends_on:
      - mongodb
      - mysql
  search-featured-results-cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    environment:
      NODE_ENV: development
      DB_HOST: mongodb
      MOTION_URL: https://motion.tr.qual.txstate.edu/v2/api
      MOTION_TOKEN: set this in docker-compose.override.yml
      MYSQL_HOST: mysql
      MYSQL_DATABASE: peoplesearch
      MYSQL_PORT: 3306
      MYSQL_PASS: secret
    depends_on:
      - mongodb
      - mysql
  mysql:
    # Switched to using local instance of mysql for development so we can
    # docker-compose down -v to reset when we want to rebuild a table.
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: peoplesearch
    ports:
      - 3306:3306
    volumes:
      - peoplesearchdata:/var/lib/mysql
  mongodb:
    image: mongo:latest
    command: --logpath /dev/null
    ports:
      - 27017:27017
    volumes:
      - featureddb:/data/db
  fakeauth:
    image: registry.its.txstate.edu/unified-auth-stub:dev
    ports:
      - 3001:80
volumes:
  featureddb: {}
  peoplesearchdata: {}
